---
import ContentSection from "~/components/layout/content-section.astro";
import WordCloud from "./WordCloud";

import kunstAreal from "./data/dreams-kunstareal.json";
import excludeWords from "./data/exclude-words.json";

import warsaw from "./data/dreams-warsaw.json";

const data = [
  {
    title: "Warsaw",
    date: "Nov. - Dec. 2023",
    data: warsaw.map((item: { word: string; value: number }) => {
      return { ...item, group: "Warsaw" };
    }),
  },
  {
    title: "Munich",
    date: "16.07.2023",
    data: reduceWords(kunstAreal, excludeWords).map(
      (item: { word: string; value: number }) => {
        return { ...item, group: "Munich" };
      }
    ),
  },
];

function reduceWords(
  input: { dream: number; wordgroups: string[] }[],
  excludeWords: string[]
) {
  const wordCounts: { [word: string]: number } = {};

  // Iterate through the input array and count words
  input.forEach(({ wordgroups }) => {
    wordgroups.forEach((word) => {
      const cleanedWord = word.toLowerCase().trim().replace(".", "");

      // Exclude words in the exclusion list
      if (!excludeWords.includes(cleanedWord)) {
        if (wordCounts[cleanedWord]) {
          wordCounts[cleanedWord]++;
        } else {
          wordCounts[cleanedWord] = 1;
        }
      }
    });
  });

  // Convert the word counts to the desired format
  const result = [];
  for (const word in wordCounts) {
    result.push({ word, value: wordCounts[word] | 0 });
  }

  // Sort the result by value in descending order
  result.sort((a, b) => b.value - a.value);

  return result;
}
---

{
  data.map((d) => (
    <ContentSection id={d.title} title={d.title}>
      <p slot="lead">{d.date}</p>
      <WordCloud client:only="react" data={d.data} title={d.title} />
    </ContentSection>
  ))
}
